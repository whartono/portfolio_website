/*
Positioning CSS Stuff
Static:     Just the default positioning

Relative:   Positions the element in the requested way (top: 10px) from where 
            it would normally be if statically positioned. Ignores other workflow elements. (takes out of document flow)
            Often used in parent classes to create a 'container' so the other elements inside cannot go out of it
            
Absolute:   Position the element in the requested way (top: 10px) from the origin.
            Origin can be changed if the parent container has a non-static position.
            Ignores other workflow elements (takes out of document flow)

Fixed:      Positions the element in the requested way from the origin.
            Origin CANNOT be changed and will stay in the same spot even when scrolling
            Used to make navigation bars
            
Sticky:     Positions the element similar to relative. However, upon scrolling past, it will
            "catch" on to the top of the screen and will become fixed.
            A mix of fixed and relative.

Display CSS STuff

BLock:      Takes up the entire width given to it and will force a newline above and below it.
            Will not have anything next to it. Div uses this natively

Inline:     Takes up only enough space to fit the content. CANNOT have height/width attributes. Span uses this natively

Inlineblock:Takes up only enough space to fit the content, BUT can have height/width attributes, unlike inline
            img uses this natively

None:       Takes content out of the work flow

Flex:       Takes the entire width given to it and has multiple properties that can be accessed using 
            align-items and justify-content, flex-wrap, and align-content
*/



.frontPage {
    display:flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    align-content:center;
    overflow: hidden;
    height:100vh;
    margin-left:250px;
    margin-top:50px;

    color:var(--offWhite);
}

/* BLOB BACKGROUND STUFF */

.blobWrapper {
    margin-left:250px;
    background:#250821;
    position:relative;
    display:flex;
    justify-content: center;
    align-items: center;
    z-index: -1;
    
}

.blob {
    position:absolute;
    display:flex;
    justify-content:center;
    align-items:center;
    height:100vh;
    top:-50px;
    width:80vw;
    
}

.blob:nth-child(2) {
    filter:blur(50px);
}

/* Rubik or Source Sans Pro for Typewriter*/

.frontPage .typewriter{
    height:15vh;
    display:flex;
    justify-content: center;
    align-items:center;
}

.frontPage .typewriter h1{
    font-size:3.5rem;
    font-weight: bold;
    letter-spacing: 0.1rem;

    font-family: 'Source Sans Pro', sans-serif;
}

.typewriter h1 .typed-text{
    font-weight:normal;
    color:#FFFF00; /* #dd7732; */
    
    font-family: 'Source Sans Pro', sans-serif;
}

.typewriter h1 .cursor {
    display: inline-block;
    width:3px;
    background-color: black;
    margin-left: 0.1rem;
    animation:blink 1s infinite;
}

.typewriter h1 .cursor.typing {
    animation:none;
}

@keyframes blink{
    0% {background-color: black;}

    49% {background-color:black;}
    50% {background-color: transparent;}

    99% {background-color:transparent;}
    100% {background-color: black;}
}

.header {
    display:flex;
    justify-content: center;
    align-items: flex-end;
}

.header p{
    margin-right: 30vw;
    font-size: 1.5rem;
}

.subheading {
    display:flex;
    align-items: flex-start;
    justify-content:center;
    padding-bottom: 50px;

}

.subheading p {
    font-size:1rem;

}

.skills {
    display:flex;
    flex-direction: row;
    justify-content: center;
}

.skills p {
    display:flex;
    align-items: flex-start;
    
    height:200px;
    width:250px;
    padding-left: 15px;

}